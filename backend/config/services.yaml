# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # Paramètres pour les refresh tokens (remplace ceux du bundle supprimé)
    refresh_token.ttl: 2592000  # 30 jours en secondes
    refresh_token.ttl_update: true  # Mise à jour du TTL à chaque rafraîchissement
    refresh_token.token_parameter_name: 'refresh_token'  # Le nom du paramètre dans la requête
    # Paramètre pour le répertoire de stockage des documents
    document_directory: '%kernel.project_dir%/public/uploads/documents'
    # Paramètres AWS
    aws.bucket_name: '%env(AWS_BUCKET)%'
    aws.region: '%env(AWS_REGION)%'
    aws.use_s3_storage: true  # Set to false to use local storage instead of S3

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Configuration du DocumentController
    App\Domains\Global\Document\Controller\DocumentController:
        arguments:
            $documentDirectory: '%document_directory%'
            $storageFactory: '@App\Service\DocumentStorageFactory'
            
    # Configuration des repositories Document
    App\Domains\Global\Document\Repository\DocumentRepository:
        autowire: true
        autoconfigure: true
        
    App\Domains\Global\Document\Repository\DocumentTypeRepository:
        autowire: true
        autoconfigure: true
        
    App\Domains\Global\Document\Repository\DocumentHistoryRepository:
        autowire: true
        autoconfigure: true

    # Configuration du S3 Storage Service
    App\Service\S3StorageService:
        arguments:
            $s3Client: '@Aws\S3\S3Client'
            $slugger: '@Symfony\Component\String\Slugger\SluggerInterface'
            $params: '@parameter_bag'
            
    # Configuration du Document Storage Factory
    App\Service\DocumentStorageFactory:
        arguments:
            $s3Service: '@App\Service\S3StorageService'
            $params: '@parameter_bag'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Configuration du service RefreshTokenService
    App\Service\RefreshTokenService:
        arguments:
            $params: '@parameter_bag'

    # Configuration du contrôleur RefreshTokenController
    App\Controller\RefreshTokenController:
        arguments:
            $params: '@parameter_bag'

    # Configuration de l'écouteur d'événement AuthenticationSuccessListener
    App\EventListener\AuthenticationSuccessListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess, priority: 10 }
        arguments:
            $tokenParameterName: '%refresh_token.token_parameter_name%'

    App\EventListener\JWTAuthenticationListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }

    # Notre écouteur d'exception API pour retourner des erreurs en JSON
    App\EventListener\ApiExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 100 }

    # Notre gestionnaire d'erreur d'authentification personnalisé
    lexik_jwt_authentication.handler.authentication_failure:
        class: App\Security\AuthenticationFailureHandler
