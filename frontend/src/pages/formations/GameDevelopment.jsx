import React from 'react';
import { motion } from 'framer-motion';
import FormationLayout from '@/components/formations/FormationLayout';

/**
 * Game Development Formation Page
 */
const GameDevelopment = ({ colorMode = 'navy' }) => {
  // Animation variants
  const sectionVariants = {
    hidden: { opacity: 0, y: 30 },
    visible: { 
      opacity: 1, 
      y: 0,
      transition: { duration: 0.6 }
    }
  };
  
  const cardVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: i => ({ 
      opacity: 1, 
      y: 0,
      transition: { 
        delay: i * 0.1,
        duration: 0.5
      }
    })
  };
  
  // Course modules
  const modules = [
    {
      title: "Fondamentaux du Game Design",
      duration: "4 semaines",
      topics: ["Principes de game design", "Level design", "Narration interactive", "√âquilibrage"],
      icon: "üéÆ"
    },
    {
      title: "Unity Engine",
      duration: "8 semaines",
      topics: ["C#", "Interface Unity", "2D & 3D", "Animation & Physics"],
      icon: "üîß"
    },
    {
      title: "Unreal Engine",
      duration: "6 semaines",
      topics: ["C++", "Blueprints", "Materials & Shaders", "Sequencer"],
      icon: "üé¨"
    },
    {
      title: "Graphismes & Assets",
      duration: "4 semaines",
      topics: ["Mod√©lisation 3D", "Texturing", "Animation", "VFX"],
      icon: "üé®"
    },
    {
      title: "Audio pour Jeux",
      duration: "2 semaines",
      topics: ["Sound Design", "Musique interactive", "Mixage", "Impl√©mentation"],
      icon: "üîä"
    },
    {
      title: "Publication & Mon√©tisation",
      duration: "4 semaines",
      topics: ["Steam", "Mobile Stores", "Marketing", "Mod√®les √©conomiques"],
      icon: "üöÄ"
    }
  ];
  
  // Technologies used
  const technologies = [
    { name: "Unity", level: 90 },
    { name: "Unreal Engine", level: 85 },
    { name: "C#", level: 85 },
    { name: "C++", level: 75 },
    { name: "Blender", level: 70 },
    { name: "Maya", level: 65 },
    { name: "Substance Painter", level: 70 },
    { name: "FMOD", level: 65 }
  ];
  
  // Career opportunities
  const careers = [
    {
      title: "Game Developer",
      description: "Programmez la logique et les m√©caniques des jeux vid√©o.",
      salary: "45K‚Ç¨ - 70K‚Ç¨",
      demand: "√âlev√©e"
    },
    {
      title: "Game Designer",
      description: "Concevez les r√®gles, m√©caniques et niveaux des jeux.",
      salary: "40K‚Ç¨ - 65K‚Ç¨",
      demand: "Mod√©r√©e"
    },
    {
      title: "Technical Artist",
      description: "Faites le pont entre les artistes et les programmeurs.",
      salary: "48K‚Ç¨ - 75K‚Ç¨",
      demand: "√âlev√©e"
    },
    {
      title: "VFX Artist",
      description: "Cr√©ez des effets visuels spectaculaires pour les jeux.",
      salary: "42K‚Ç¨ - 68K‚Ç¨",
      demand: "Mod√©r√©e"
    }
  ];
  
  // Game projects
  const gameProjects = [
    {
      title: "Platformer 2D",
      description: "Cr√©ez un jeu de plateforme avec des m√©caniques de saut, collecte d'objets et ennemis.",
      skills: ["Unity", "C#", "Animation 2D"],
      duration: "4 semaines"
    },
    {
      title: "FPS Multijoueur",
      description: "D√©veloppez un jeu de tir √† la premi√®re personne avec mode multijoueur en r√©seau.",
      skills: ["Unreal Engine", "C++", "Networking"],
      duration: "6 semaines"
    },
    {
      title: "RPG Mobile",
      description: "Concevez un jeu de r√¥le pour mobile avec syst√®me de progression et combats au tour par tour.",
      skills: ["Unity", "Mobile Dev", "UI/UX"],
      duration: "8 semaines"
    }
  ];
  
  return (
    <FormationLayout
      title="D√©veloppement de Jeux Vid√©o"
      subtitle="Ma√Ætrisez Unity, Unreal Engine et les techniques de game design pour cr√©er des jeux captivants sur diff√©rentes plateformes."
      color="yellow"
      icon="üéÆ"
      colorMode={colorMode}
    >
      {/* Overview Section */}
      <motion.section
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true }}
        className={`mb-20 p-8 rounded-2xl ${colorMode === 'navy' ? 'bg-[#001a38]/50' : 'bg-gray-900/50'} backdrop-blur-lg border ${colorMode === 'navy' ? 'border-[#0a3c6e]/30' : 'border-gray-800/30'}`}
      >
        <h2 className={`text-3xl font-bold mb-6 ${colorMode === 'navy' ? 'text-blue-300' : 'text-purple-300'}`}>
          Aper√ßu du programme
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
          <div className={`p-6 rounded-xl ${colorMode === 'navy' ? 'bg-[#0a3c6e]/20' : 'bg-purple-900/20'} flex flex-col items-center text-center`}>
            <span className="text-4xl mb-4">‚è±Ô∏è</span>
            <h3 className="text-xl font-bold text-white mb-2">Dur√©e</h3>
            <p className={`${colorMode === 'navy' ? 'text-blue-100' : 'text-gray-300'}`}>32 semaines</p>
          </div>
          <div className={`p-6 rounded-xl ${colorMode === 'navy' ? 'bg-[#0a3c6e]/20' : 'bg-purple-900/20'} flex flex-col items-center text-center`}>
            <span className="text-4xl mb-4">üéì</span>
            <h3 className="text-xl font-bold text-white mb-2">Niveau</h3>
            <p className={`${colorMode === 'navy' ? 'text-blue-100' : 'text-gray-300'}`}>D√©butant √† Avanc√©</p>
          </div>
          <div className={`p-6 rounded-xl ${colorMode === 'navy' ? 'bg-[#0a3c6e]/20' : 'bg-purple-900/20'} flex flex-col items-center text-center`}>
            <span className="text-4xl mb-4">üèÜ</span>
            <h3 className="text-xl font-bold text-white mb-2">Certification</h3>
            <p className={`${colorMode === 'navy' ? 'text-blue-100' : 'text-gray-300'}`}>Dipl√¥me Tech Odyssey</p>
          </div>
        </div>
        <p className={`text-lg ${colorMode === 'navy' ? 'text-blue-100' : 'text-gray-300'} mb-6`}>
          Notre formation compl√®te en d√©veloppement de jeux vid√©o vous permettra de ma√Ætriser les outils et techniques 
          utilis√©s par les studios professionnels. L'industrie du jeu vid√©o est en pleine expansion et recherche 
          constamment de nouveaux talents cr√©atifs et techniques.
        </p>
        <p className={`text-lg ${colorMode === 'navy' ? 'text-blue-100' : 'text-gray-300'}`}>
          Ce programme intensif couvre √† la fois les aspects techniques (programmation, moteurs de jeu) et cr√©atifs 
          (game design, level design, graphismes) du d√©veloppement de jeux. √Ä la fin de cette formation, vous aurez 
          cr√©√© plusieurs jeux pour diff√©rentes plateformes et serez pr√™t √† int√©grer l'industrie ou √† lancer votre 
          propre studio ind√©pendant.
        </p>
      </motion.section>
      
      {/* Modules Section */}
      <motion.section
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true }}
        className="mb-20"
      >
        <h2 className={`text-3xl font-bold mb-10 text-center ${colorMode === 'navy' ? 'text-blue-300' : 'text-purple-300'}`}>
          Modules du cours
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {modules.map((module, i) => (
            <motion.div
              key={i}
              custom={i}
              variants={cardVariants}
              initial="hidden"
              whileInView="visible"
              viewport={{ once: true }}
              className={`p-6 rounded-xl ${colorMode === 'navy' ? 'bg-[#001a38]/80' : 'bg-gray-900/80'} backdrop-blur-sm border ${colorMode === 'navy' ? 'border-[#0a3c6e]/30' : 'border-gray-800/30'} hover:shadow-lg transition-shadow`}
            >
              <div className="flex items-start mb-4">
                <div className="w-12 h-12 rounded-full bg-yellow-600 flex items-center justify-center text-2xl mr-4">
                  {module.icon}
                </div>
                <div>
                  <h3 className="text-xl font-bold text-white">{module.title}</h3>
                  <p className={`${colorMode === 'navy' ? 'text-blue-200' : 'text-purple-200'} text-sm`}>{module.duration}</p>
                </div>
              </div>
              <ul className={`space-y-2 ${colorMode === 'navy' ? 'text-blue-100' : 'text-gray-300'}`}>
                {module.topics.map((topic, j) => (
                  <li key={j} className="flex items-center">
                    <span className={`mr-2 text-xs ${colorMode === 'navy' ? 'text-yellow-300' : 'text-yellow-400'}`}>‚óè</span>
                    {topic}
                  </li>
                ))}
              </ul>
            </motion.div>
          ))}
        </div>
      </motion.section>
      
      {/* Technologies Section */}
      <motion.section
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true }}
        className={`mb-20 p-8 rounded-2xl ${colorMode === 'navy' ? 'bg-[#001a38]/50' : 'bg-gray-900/50'} backdrop-blur-lg border ${colorMode === 'navy' ? 'border-[#0a3c6e]/30' : 'border-gray-800/30'}`}
      >
        <h2 className={`text-3xl font-bold mb-10 text-center ${colorMode === 'navy' ? 'text-blue-300' : 'text-purple-300'}`}>
          Technologies et outils
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-x-12 gap-y-6">
          {technologies.map((tech, i) => (
            <div key={i} className="mb-4">
              <div className="flex justify-between mb-1">
                <span className="text-white font-medium">{tech.name}</span>
                <span className={`${colorMode === 'navy' ? 'text-yellow-300' : 'text-yellow-400'}`}>{tech.level}%</span>
              </div>
              <div className={`w-full h-2 bg-gray-700 rounded-full overflow-hidden`}>
                <motion.div
                  className="h-full bg-yellow-600"
                  initial={{ width: 0 }}
                  whileInView={{ width: `${tech.level}%` }}
                  viewport={{ once: true }}
                  transition={{ duration: 1, delay: i * 0.1 }}
                ></motion.div>
              </div>
            </div>
          ))}
        </div>
      </motion.section>
      
      {/* Game Projects */}
      <motion.section
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true }}
        className="mb-20"
      >
        <h2 className={`text-3xl font-bold mb-10 text-center ${colorMode === 'navy' ? 'text-blue-300' : 'text-purple-300'}`}>
          Projets de jeux
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {gameProjects.map((project, i) => (
            <motion.div
              key={i}
              custom={i}
              variants={cardVariants}
              initial="hidden"
              whileInView="visible"
              viewport={{ once: true }}
              className={`p-6 rounded-xl ${colorMode === 'navy' ? 'bg-[#001a38]/80' : 'bg-gray-900/80'} backdrop-blur-sm border ${colorMode === 'navy' ? 'border-[#0a3c6e]/30' : 'border-gray-800/30'} hover:shadow-lg transition-all`}
            >
              <div className="w-full h-48 rounded-lg mb-4 overflow-hidden bg-gradient-to-br from-yellow-500/20 to-orange-500/20 flex items-center justify-center">
                <span className="text-6xl">{project.title.split(" ")[0].charAt(0)}</span>
              </div>
              <h3 className="text-xl font-bold text-white mb-2">{project.title}</h3>
              <p className={`${colorMode === 'navy' ? 'text-blue-100' : 'text-gray-300'} mb-4 text-sm`}>{project.description}</p>
              <div className="flex flex-wrap gap-2 mb-4">
                {project.skills.map((skill, j) => (
                  <span 
                    key={j} 
                    className={`px-3 py-1 rounded-full text-xs font-medium ${colorMode === 'navy' ? 'bg-yellow-900/40 text-yellow-200' : 'bg-yellow-800/40 text-yellow-200'}`}
                  >
                    {skill}
                  </span>
                ))}
              </div>
              <div className="flex items-center">
                <span className={`text-sm ${colorMode === 'navy' ? 'text-yellow-300' : 'text-yellow-400'} mr-2`}>Dur√©e:</span>
                <span className={`text-sm ${colorMode === 'navy' ? 'text-blue-100' : 'text-gray-300'}`}>{project.duration}</span>
              </div>
            </motion.div>
          ))}
        </div>
      </motion.section>
      
      {/* Career Opportunities */}
      <motion.section
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true }}
        className="mb-20"
      >
        <h2 className={`text-3xl font-bold mb-10 text-center ${colorMode === 'navy' ? 'text-blue-300' : 'text-purple-300'}`}>
          D√©bouch√©s professionnels
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {careers.map((career, i) => (
            <motion.div
              key={i}
              custom={i}
              variants={cardVariants}
              initial="hidden"
              whileInView="visible"
              viewport={{ once: true }}
              className={`p-6 rounded-xl ${colorMode === 'navy' ? 'bg-[#001a38]/80' : 'bg-gray-900/80'} backdrop-blur-sm border ${colorMode === 'navy' ? 'border-[#0a3c6e]/30' : 'border-gray-800/30'}`}
            >
              <h3 className="text-xl font-bold text-white mb-2">{career.title}</h3>
              <p className={`${colorMode === 'navy' ? 'text-blue-100' : 'text-gray-300'} mb-4`}>{career.description}</p>
              <div className="flex justify-between">
                <div>
                  <span className={`text-sm ${colorMode === 'navy' ? 'text-yellow-300' : 'text-yellow-400'}`}>Salaire annuel</span>
                  <p className="text-white font-medium">{career.salary}</p>
                </div>
                <div>
                  <span className={`text-sm ${colorMode === 'navy' ? 'text-yellow-300' : 'text-yellow-400'}`}>Demande</span>
                  <p className="text-white font-medium">{career.demand}</p>
                </div>
              </div>
            </motion.div>
          ))}
        </div>
      </motion.section>
      
      {/* Call to Action */}
      <motion.section
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true }}
        className={`p-10 rounded-2xl text-center ${colorMode === 'navy' ? 'bg-gradient-to-r from-yellow-600/20 to-orange-600/20' : 'bg-gradient-to-r from-yellow-900/20 to-orange-900/20'} backdrop-blur-lg border ${colorMode === 'navy' ? 'border-yellow-500/30' : 'border-yellow-800/30'}`}
      >
        <h2 className="text-3xl font-bold text-white mb-4">Pr√™t √† cr√©er vos propres jeux vid√©o ?</h2>
        <p className={`text-lg ${colorMode === 'navy' ? 'text-blue-100' : 'text-gray-300'} max-w-3xl mx-auto mb-8`}>
          Rejoignez notre formation compl√®te et acqu√©rez les comp√©tences recherch√©es dans l'industrie du jeu vid√©o.
        </p>
        <div className="flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4">
          <motion.button
            className="px-8 py-4 bg-yellow-600 hover:bg-yellow-700 text-white rounded-lg font-medium shadow-lg"
            whileHover={{ scale: 1.05, boxShadow: '0 0 20px rgba(0, 0, 0, 0.3)' }}
            whileTap={{ scale: 0.98 }}
          >
            S'inscrire maintenant
          </motion.button>
          <motion.button
            className={`px-8 py-4 bg-opacity-10 bg-white text-white rounded-lg font-medium border ${colorMode === 'navy' ? 'border-yellow-500/30' : 'border-yellow-800/30'}`}
            whileHover={{ scale: 1.05, backgroundColor: 'rgba(255, 255, 255, 0.15)' }}
            whileTap={{ scale: 0.98 }}
          >
            T√©l√©charger la brochure
          </motion.button>
        </div>
      </motion.section>
    </FormationLayout>
  );
};

export default GameDevelopment;
