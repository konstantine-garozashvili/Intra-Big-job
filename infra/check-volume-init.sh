#!/bin/bash
# Script pour v√©rifier le montage et l'ex√©cution des scripts init.sql

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${CYAN}üîç V√©rification du montage et de l'ex√©cution des scripts d'initialisation MySQL...${NC}\n"

MYSQL_CONTAINER="infra-database-1"

# V√©rifier si le container est en cours d'ex√©cution
echo -e "${YELLOW}1. V√©rification du container MySQL...${NC}"
if ! docker ps --filter "name=$MYSQL_CONTAINER" --format "{{.Names}}" | grep -q "$MYSQL_CONTAINER"; then
  echo -e "${RED}‚ùå Le container MySQL '$MYSQL_CONTAINER' n'est pas en cours d'ex√©cution.${NC}"
  exit 1
else
  echo -e "${GREEN}‚úÖ Container MySQL en cours d'ex√©cution.${NC}\n"
fi

# V√©rifier si le r√©pertoire d'initialisation est mont√© dans le container
echo -e "${YELLOW}2. V√©rification du montage du r√©pertoire d'initialisation...${NC}"
MOUNT_CHECK=$(docker exec $MYSQL_CONTAINER ls -la /docker-entrypoint-initdb.d/ 2>&1)
if echo "$MOUNT_CHECK" | grep -q "No such file"; then
  echo -e "${RED}‚ùå Le r√©pertoire /docker-entrypoint-initdb.d/ n'est pas mont√© dans le container.${NC}"
else
  echo -e "${GREEN}‚úÖ Le r√©pertoire /docker-entrypoint-initdb.d/ est mont√© dans le container:${NC}"
  echo -e "${BLUE}$MOUNT_CHECK${NC}\n"
fi

# V√©rifier le contenu du fichier init.sql dans le container
echo -e "${YELLOW}3. V√©rification du contenu du fichier init.sql...${NC}"
SQL_CHECK=$(docker exec $MYSQL_CONTAINER cat /docker-entrypoint-initdb.d/init.sql 2>&1)
if echo "$SQL_CHECK" | grep -q "No such file"; then
  echo -e "${RED}‚ùå Le fichier init.sql n'existe pas dans le container.${NC}"
else
  echo -e "${GREEN}‚úÖ Contenu du fichier init.sql:${NC}"
  echo -e "${BLUE}$SQL_CHECK${NC}\n"
fi

# V√©rifier l'ex√©cution du script d'initialisation dans les logs
echo -e "${YELLOW}4. Recherche de traces d'ex√©cution du script d'initialisation dans les logs...${NC}"
INIT_LOGS=$(docker logs $MYSQL_CONTAINER 2>&1 | grep -E "Initializing database|init.sql|docker-entrypoint-initdb.d")
if [ -z "$INIT_LOGS" ]; then
  echo -e "${RED}‚ùå Aucune trace d'ex√©cution du script d'initialisation trouv√©e dans les logs.${NC}\n"
  
  # Afficher les 20 derni√®res lignes de logs du container
  echo -e "${YELLOW}Derni√®res lignes de logs du container MySQL:${NC}"
  RECENT_LOGS=$(docker logs $MYSQL_CONTAINER --tail 20 2>&1)
  echo -e "${BLUE}$RECENT_LOGS${NC}\n"
else
  echo -e "${GREEN}‚úÖ Traces d'ex√©cution du script d'initialisation:${NC}"
  echo -e "${BLUE}$INIT_LOGS${NC}\n"
fi

# V√©rifier si les utilisateurs cr√©√©s par le script existent
echo -e "${YELLOW}5. V√©rification de l'existence des utilisateurs cr√©√©s par le script...${NC}"
USER_CHECK=$(docker exec $MYSQL_CONTAINER mysql -uroot -proot -e "SELECT user, host FROM mysql.user WHERE user='user' OR user='root';" 2>&1)
if echo "$USER_CHECK" | grep -q "ERROR"; then
  echo -e "${RED}‚ùå Erreur lors de la v√©rification des utilisateurs:${NC}"
  echo -e "${BLUE}$USER_CHECK${NC}\n"
else
  echo -e "${GREEN}‚úÖ Utilisateurs existants:${NC}"
  echo -e "${BLUE}$USER_CHECK${NC}\n"
fi

# V√©rifier l'emplacement o√π Docker monte les volumes
echo -e "${YELLOW}6. V√©rification de l'emplacement des volumes Docker...${NC}"
VOLUME_INFO=$(docker volume inspect infra_database_data 2>&1)
echo -e "${BLUE}$VOLUME_INFO${NC}\n"

# V√©rifier si le script peut √™tre cr√©√© et ex√©cut√© directement dans le container
echo -e "${YELLOW}7. Test de cr√©ation et d'ex√©cution d'un script temporaire...${NC}"
TEST_SCRIPT=$(docker exec $MYSQL_CONTAINER bash -c "cat > /tmp/test.sql << 'EOF'
SHOW DATABASES;
SELECT user, host FROM mysql.user;
SHOW GRANTS FOR 'user'@'%';
EOF

mysql -uroot -proot < /tmp/test.sql 2>&1")

if echo "$TEST_SCRIPT" | grep -q "ERROR"; then
  echo -e "${RED}‚ùå Erreur lors de l'ex√©cution du script temporaire:${NC}"
  echo -e "${BLUE}$TEST_SCRIPT${NC}\n"
else
  echo -e "${GREEN}‚úÖ R√©sultat de l'ex√©cution du script temporaire:${NC}"
  echo -e "${BLUE}$TEST_SCRIPT${NC}\n"
fi

echo -e "${GREEN}‚úÖ V√©rification termin√©e.${NC}"
echo -e "${CYAN}‚ÑπÔ∏è Si les scripts d'initialisation ne sont pas ex√©cut√©s, essayez de:${NC}"
echo -e "${CYAN}  - Supprimer compl√®tement le volume MySQL: docker volume rm infra_database_data${NC}"
echo -e "${CYAN}  - V√©rifier les permissions sur le r√©pertoire C:/DockerVolumes/mysql-data${NC}"
echo -e "${CYAN}  - Red√©marrer compl√®tement les containers: docker-compose down && docker-compose up -d${NC}" 