services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - app-network
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    volumes:
      - backend_vendor:/var/www/symfony/vendor
      - backend_var:/var/www/symfony/var
      - jwt_keys:/var/www/symfony/config/jwt
    depends_on:
      - database
      - redis
    networks:
      - app-network
    environment:
      REDIS_URL: redis://redis:6379
    command: bash -c "composer install --no-interaction && 
      sleep 15 && 
      php bin/console doctrine:database:create --if-not-exists --no-interaction && 
      php bin/console doctrine:schema:update --force --no-interaction && 
      php bin/console doctrine:fixtures:load --no-interaction --append || php bin/console doctrine:fixtures:load --no-interaction && 
      exec php-fpm"

  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ../backend:/var/www/symfony
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  database:
    image: mysql:8.0
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-use-native-aio=0
      --innodb-flush-method=O_DIRECT
      --innodb-flush-log-at-trx-commit=0
      --max-allowed-packet=128M
      --skip-host-cache
      --skip-name-resolve
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: bigproject
      MYSQL_USER: user
      MYSQL_PASSWORD: "password"
    volumes:
      - type: volume
        source: database_data
        target: /var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "3306:3306"
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: database
      PMA_USER: root
      PMA_PASSWORD: root
      UPLOAD_LIMIT: 300M
    depends_on:
      - database
    networks:
      - app-network

  dns-checker:
    image: nicolaka/netshoot
    command: sh -c "while true; do dig database; sleep 5; done"
    networks:
      - app-network
    depends_on:
      - database

networks:
  app-network:
    driver: bridge

volumes:
  database_data:
    driver: local
    driver_opts:
      o: "size=2G"
  frontend_node_modules:
  backend_vendor:
  backend_var:
  jwt_keys:
  redis_data:
